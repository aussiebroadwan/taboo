name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: aussiebroadwan/taboo
  TABOO_HOST: taboo.tabdiscord.com

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login to the Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name}}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha}}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate docker-compose file
        env:
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          TABOO_HOST: ${{ env.TABOO_HOST }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        run: |
          cat <<EOF > docker-compose.yml
          services:
            taboo:
              image: ${REGISTRY}/${IMAGE_NAME}:${GITHUB_REF_NAME}
              environment:
                - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
                - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
              deploy:
                mode: global
                placement:
                  constraints:
                    - node.role == manager
                labels:
                  - "traefik.enable=true"
                  - "traefik.http.services.taboo.loadbalancer.server.port=8080"
                  - "traefik.http.routers.taboo.rule=Host(${TABOO_HOST})"
                  - "traefik.http.routers.taboo.entrypoints=websecure"
                  - "traefik.http.routers.taboo.tls.certresolver=cloudflare"
              volumes:
                - tabo-data:/data
          volumes:
            tabo-data:
          EOF

      - name: Deploy docker stack
        uses: cssnr/stack-deploy-action@v1
        with:
          name: ${{ secrets.DEPLOY_STACK_NAME }}
          file: docker-compose.yml
          user: deploy
          host: ${{ secrets.DEPLOY_HOST }}
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
