// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/game/latest": {
            "get": {
                "description": "Retrieves the most recent game ID, its creation time, and the list of picks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get latest game results",
                "responses": {
                    "200": {
                        "description": "Latest game result",
                        "schema": {
                            "$ref": "#/definitions/web.GameIDResponse"
                        }
                    },
                    "404": {
                        "description": "Unable to find game",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unexpected error responding",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/game/range": {
            "get": {
                "description": "Retrieves a list of game results starting from a given game ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get a range of game results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Starting game ID",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of games to return (max 100)",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of game results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/web.GameIDResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unexpected error responding",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/game/{gameid}": {
            "get": {
                "description": "Retrieves the results of a specific game given its ID, including its creation time and picks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get specific game results",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "gameid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game result by ID",
                        "schema": {
                            "$ref": "#/definitions/web.GameIDResponse"
                        }
                    },
                    "404": {
                        "description": "Unable to find game",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Unexpected error responding",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "web.GameIDResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2025-01-01T12:00:00Z"
                },
                "gameId": {
                    "type": "integer",
                    "example": 100
                },
                "picks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Taboo Game API",
	Description:      "This API provides endpoints to fetch game results from the Taboo game backend, including the latest game, specific games by ID, and a range of games.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
